"use strict";
(self["webpackChunkstorybookhtml"] = self["webpackChunkstorybookhtml"] || []).push([["Button-stories"],{

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Large": () => (/* binding */ Large),
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "Secondary": () => (/* binding */ Secondary),
/* harmony export */   "Small": () => (/* binding */ Small),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ "./stories/Button.js");


// More on how to set up stories at: https://storybook.js.org/docs/html/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  tags: ['autodocs'],
  render: ({
    label,
    ...args
  }) => {
    // You can either use a function to create DOM elements or use a plain html string!
    // return `<div>${label}</div>`;
    return (0,_Button__WEBPACK_IMPORTED_MODULE_0__.createButton)({
      label,
      ...args
    });
  },
  argTypes: {
    backgroundColor: {
      control: 'color'
    },
    label: {
      control: 'text'
    },
    onClick: {
      action: 'onClick'
    },
    primary: {
      control: 'boolean'
    },
    size: {
      control: {
        type: 'select'
      },
      options: ['small', 'medium', 'large']
    }
  }
});

// More on writing stories with args: https://storybook.js.org/docs/html/writing-stories/args
const Primary = {
  args: {
    primary: true,
    label: 'Button'
  }
};
const Secondary = {
  args: {
    label: 'Button'
  }
};
const Large = {
  args: {
    size: 'large',
    label: 'Button'
  }
};
const Small = {
  args: {
    size: 'small',
    label: 'Button'
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: 'Button'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'large',\n    label: 'Button'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'small',\n    label: 'Button'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Large", "Small"];

/***/ }),

/***/ "./stories/Button.js":
/*!***************************!*\
  !*** ./stories/Button.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createButton": () => (/* binding */ createButton)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module './button.css'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());

const createButton = ({
  primary = false,
  size = 'medium',
  backgroundColor = '#F5F5F5',
  // デフォルト値を正しく設定
  label,
  onClick
}) => {
  const btn = document.createElement('button');
  btn.type = 'button';
  btn.innerText = label;
  btn.addEventListener('click', onClick);
  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';
  btn.className = ['storybook-button', `storybook-button--${size}`, mode].join(' ');
  btn.style.backgroundColor = backgroundColor;
  return btn;
};

/***/ })

}]);
//# sourceMappingURL=Button-stories.iframe.bundle.js.map